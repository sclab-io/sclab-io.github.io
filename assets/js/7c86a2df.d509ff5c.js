"use strict";(self.webpackChunksclab_docs=self.webpackChunksclab_docs||[]).push([[1320],{6311:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var i=n(4848),a=n(8453);const s={title:"ORACLE Connector",tags:["Connector","DB","ORACLE"]},l=void 0,r={id:"tutorial/Connectors/ORACLE",title:"ORACLE Connector",description:"Introduction",source:"@site/docs/tutorial/03-Connectors/03-ORACLE.md",sourceDirName:"tutorial/03-Connectors",slug:"/tutorial/Connectors/ORACLE",permalink:"/docs/tutorial/Connectors/ORACLE",draft:!1,unlisted:!1,editUrl:"https://github.com/sclab-io/sclab-io.github.io/tree/main/docs/tutorial/03-Connectors/03-ORACLE.md",tags:[{label:"Connector",permalink:"/docs/tags/connector"},{label:"DB",permalink:"/docs/tags/db"},{label:"ORACLE",permalink:"/docs/tags/oracle"}],version:"current",sidebarPosition:3,frontMatter:{title:"ORACLE Connector",tags:["Connector","DB","ORACLE"]},sidebar:"tutorial",previous:{title:"MySQL Connector",permalink:"/docs/tutorial/Connectors/MySQL"},next:{title:"SQL Server Connector",permalink:"/docs/tutorial/Connectors/MSSQL"}},o={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Features",id:"features",level:3},{value:"mqtt method format:",id:"mqtt-method-format",level:3},{value:"api method format:",id:"api-method-format",level:3},{value:"Installation",id:"installation",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"clone source",id:"clone-source",level:3},{value:"create JWT key file for API",id:"create-jwt-key-file-for-api",level:3},{value:"create .env.production.local",id:"create-envproductionlocal",level:3},{value:"start",id:"start",level:3},{value:"stop",id:"stop",level:3},{value:"logs",id:"logs",level:3},{value:"access API end point",id:"access-api-end-point",level:3},{value:"Build source",id:"build-source",level:2},{value:"install nodejs",id:"install-nodejs",level:3},{value:"build source",id:"build-source-1",level:3},{value:"Connect data using API",id:"connect-data-using-api",level:2},{value:"Connect to QUERY_2",id:"connect-to-query_2",level:3},{value:"1. Navigate to the data editor screen in SCLAB Studio and add an API.",id:"1-navigate-to-the-data-editor-screen-in-sclab-studio-and-add-an-api",level:3},{value:"2. Select the Headers tab and enter the authentication key value.",id:"2-select-the-headers-tab-and-enter-the-authentication-key-value",level:3},{value:"3. If it is a query with parameters set, add the setting value to the Params tab.",id:"3-if-it-is-a-query-with-parameters-set-add-the-setting-value-to-the-params-tab",level:3},{value:"4. Click the SEND button to establish a connection.",id:"4-click-the-send-button-to-establish-a-connection",level:3},{value:"5. Verify that the data is coming in properly.",id:"5-verify-that-the-data-is-coming-in-properly",level:3},{value:"6. If the data is received, map the field and label values through the Pass Configuration.",id:"6-if-the-data-is-received-map-the-field-and-label-values-through-the-pass-configuration",level:3},{value:"7. Click the SAVE button to save the data.",id:"7-click-the-save-button-to-save-the-data",level:3},{value:"8. Then, proceed to visualize the data in chart or table format.",id:"8-then-proceed-to-visualize-the-data-in-chart-or-table-format",level:3},{value:"Oracle Client mode",id:"oracle-client-mode",level:2},{value:"Thin mode (nodejs default)",id:"thin-mode-nodejs-default",level:3},{value:"Thick mode (docker-compose default)",id:"thick-mode-docker-compose-default",level:3},{value:"Thick mode install",id:"thick-mode-install",level:4},{value:"Mapping with Mybatis",id:"mapping-with-mybatis",level:2},{value:"if\ubb38 \uc0ac\uc6a9 \uc608\uc81c",id:"if\ubb38-\uc0ac\uc6a9-\uc608\uc81c",level:3},{value:"Example of using a Stored Procedure",id:"example-of-using-a-stored-procedure",level:3},{value:"Example of a Stored Procedure with a Cursor",id:"example-of-a-stored-procedure-with-a-cursor",level:3}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(t.p,{children:"This connector provides functionality for retrieving data using ORACLE Database in SCLAB Studio."}),"\n",(0,i.jsx)(t.h3,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Connect to ORACLE DB with connection pool"}),"\n",(0,i.jsx)(t.li,{children:"MQTT message publish using SQL Query with interval"}),"\n",(0,i.jsx)(t.li,{children:"Create REST API endpoint with SQL Query"}),"\n",(0,i.jsx)(t.li,{children:"JWT for HTTP authorization"}),"\n",(0,i.jsx)(t.li,{children:"Processing of result data into JSON format"}),"\n",(0,i.jsx)(t.li,{children:"SQL Injection filter (default on)"}),"\n",(0,i.jsx)(t.li,{children:"Mapping with Mybatis"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:'By adding a query in the format of "QUERY_1=mqtt;query;topic;interval ms" to the .env file, SQL is automatically executed to connect and retrieve data from SCLAB.'}),"\n",(0,i.jsx)(t.p,{children:"Two methods are supported: MQTT and API, each with a different variable format:"}),"\n",(0,i.jsx)(t.h3,{id:"mqtt-method-format",children:"mqtt method format:"}),"\n",(0,i.jsx)(t.p,{children:"QUERY_#=mqtt;SQL Query;topic;interval MS"}),"\n",(0,i.jsx)(t.h3,{id:"api-method-format",children:"api method format:"}),"\n",(0,i.jsx)(t.p,{children:"QUERY_#=api;SQL Query;Endpoint URL"}),"\n",(0,i.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(t.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"ORACLE Database"}),"\n",(0,i.jsx)(t.li,{children:"connection information"}),"\n",(0,i.jsx)(t.li,{children:"Install docker or nodejs"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"clone-source",children:"clone source"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ git clone https://github.com/sclab-io/sclab-oracle-connector\n"})}),"\n",(0,i.jsx)(t.h3,{id:"create-jwt-key-file-for-api",children:"create JWT key file for API"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ mkdir jwt\n$ ssh-keygen -t rsa -b 4096 -m PEM -f ./jwt/jwtRS256.key\n# empty passphrase - just press enter\n$ openssl rsa -in ./jwt/jwtRS256.key -pubout -outform PEM -out ./jwt/jwtRS256.key.pub\n"})}),"\n",(0,i.jsx)(t.h3,{id:"create-envproductionlocal",children:"create .env.production.local"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'$ vi .env.production.local\n\n# ORACLE Connection\nORACLE_USER="C##USER"\nORACLE_PASSWORD=pasword\n# https://node-oracledb.readthedocs.io/en/latest/user_guide/connection_handling.html#connection-strings\nORACLE_CONNECTION_STRING=host:1521/SID\nORACLE_POOL_MAX_SIZE=10\nORACLE_POOL_MIN_SIZE=4\nORACLE_POOL_INCREMENT_SIZE=1\nORACLE_MAX_ROW_SIZE=1000\n\n# ORACLE_CLIENT_DIR=./client/instantclient_21_10\n\n# SCLAB IoT\n# MQTT_TOPIC=yourtopic/\n# MQTT_HOST=yourhost\n# MQTT_CLIENT_ID=your-client-id/1\n# MQTT_ID=your-id\n# MQTT_PASSWORD=your-password\n\n# QUERY_#=mqtt;query;topic;interval ms\n# QUERY_#=api;query;endPoint\nQUERY_1=api;SELECT DBMS_RANDOM.VALUE(1, 100) AS random_number, SYSDATE AS current_time FROM dual;/api/1\nQUERY_2=api;SELECT ${field} FROM ${table} where name="${name}";/api/2\n# QUERY_3=mqtt;SELECT DBMS_RANDOM.VALUE(1, 100) AS random_number, SYSDATE AS current_time FROM dual;test0;1000\n# QUERY_4=mqtt;SELECT DBMS_RANDOM.VALUE(1, 1000) AS random_number, SYSDATE AS current_time FROM dual;test1;5000\n# QUERY_mybatis_1=mybatis;sample;test;{};/api/mybatistest\n# QUERY_mybatis_2=mybatis;sample2;test;{"p_id": {"type": "number", "dir": "in"}, "p_name": {"dir": "out", "type": "string"}, "p_view_count": {"dir": "out", "type": "number"}};/api/mybatistest2\n# QUERY_mybatis_3=mybatis;sample3;test;{"p_id": {"type": "number", "dir": "in"}, "p_cursor": {"dir": "out", "type": "cursor"}};/api/mybatistest3\n\n# PORT\nPORT=3000\n\n# MyBatis\nMY_BATIS_FILE_FOLDER=./mybatis\n\n# TOKEN\nSECRET_KEY=secretKey\nJWT_PRIVATE_KEY_PATH=./jwt/jwtRS256.key\nJWT_PUBLIC_KEY_PATH=./jwt/jwtRS256.key.pub\n\n# LOG\nLOG_FORMAT=combined\nLOG_DIR=../logs\n\n# CORS\nORIGIN=your.domain.com\nCREDENTIALS=true\n\n# SQL INJECTION\nSQL_INJECTION=1\n'})}),"\n",(0,i.jsx)(t.h3,{id:"start",children:"start"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"# docker compose\n$ ./run.sh\n\n# nodejs\n$ npm run start\n\n# pm2\n$ npm run deploy:prod\n"})}),"\n",(0,i.jsx)(t.h3,{id:"stop",children:"stop"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"# docker compose\n$ ./stop.sh\n\n# pm2\n$ ./node_modules/pm2/bin/pm2 stop 0\n"})}),"\n",(0,i.jsx)(t.h3,{id:"logs",children:"logs"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ ./logs.sh\n"})}),"\n",(0,i.jsx)(t.h3,{id:"access-api-end-point",children:"access API end point"}),"\n",(0,i.jsx)(t.p,{children:"To access the API, you need to include authorization information in the Request Header in the following format:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"authorization: yourkey\n"})}),"\n",(0,i.jsx)(t.p,{children:"You can find your key information through the logs."}),"\n",(0,i.jsx)(t.h2,{id:"build-source",children:"Build source"}),"\n",(0,i.jsx)(t.h3,{id:"install-nodejs",children:"install nodejs"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"curl -sL https://rpm.nodesource.com/setup_18.x | sudo bash -\nsudo yum install nodejs\n"})}),"\n",(0,i.jsx)(t.h3,{id:"build-source-1",children:"build source"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ npm install\n$ npm run build\n"})}),"\n",(0,i.jsx)(t.h2,{id:"connect-data-using-api",children:"Connect data using API"}),"\n",(0,i.jsx)(t.h3,{id:"connect-to-query_2",children:"Connect to QUERY_2"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'QUERY_2=api;SELECT ${field} from ${table} where name="${name}";/api/2\n'})}),"\n",(0,i.jsx)(t.h3,{id:"1-navigate-to-the-data-editor-screen-in-sclab-studio-and-add-an-api",children:"1. Navigate to the data editor screen in SCLAB Studio and add an API."}),"\n",(0,i.jsx)(t.p,{children:"Enter the API endpoint address you want to connect to. If you are using Docker, the default port is set to 9180."}),"\n",(0,i.jsx)(t.p,{children:"Please enter the address in the following format."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"http://ip:9080/api/2\n"})}),"\n",(0,i.jsx)(t.h3,{id:"2-select-the-headers-tab-and-enter-the-authentication-key-value",children:"2. Select the Headers tab and enter the authentication key value."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Key"}),(0,i.jsx)(t.th,{children:"Value Type"}),(0,i.jsx)(t.th,{children:"Value"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"authorization"}),(0,i.jsx)(t.td,{children:"Fixed"}),(0,i.jsx)(t.td,{children:"yourkeyfromlog"})]})})]}),"\n",(0,i.jsx)(t.h3,{id:"3-if-it-is-a-query-with-parameters-set-add-the-setting-value-to-the-params-tab",children:"3. If it is a query with parameters set, add the setting value to the Params tab."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Key"}),(0,i.jsx)(t.th,{children:"Value Type"}),(0,i.jsx)(t.th,{children:"Value"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"field"}),(0,i.jsx)(t.td,{children:"Variable"}),(0,i.jsx)(t.td,{children:"*"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"table"}),(0,i.jsx)(t.td,{children:"Variable"}),(0,i.jsx)(t.td,{children:"product"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"name"}),(0,i.jsx)(t.td,{children:"Variable"}),(0,i.jsx)(t.td,{children:"Bike"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"4-click-the-send-button-to-establish-a-connection",children:"4. Click the SEND button to establish a connection."}),"\n",(0,i.jsx)(t.h3,{id:"5-verify-that-the-data-is-coming-in-properly",children:"5. Verify that the data is coming in properly."}),"\n",(0,i.jsx)(t.h3,{id:"6-if-the-data-is-received-map-the-field-and-label-values-through-the-pass-configuration",children:"6. If the data is received, map the field and label values through the Pass Configuration."}),"\n",(0,i.jsx)(t.h3,{id:"7-click-the-save-button-to-save-the-data",children:"7. Click the SAVE button to save the data."}),"\n",(0,i.jsx)(t.h3,{id:"8-then-proceed-to-visualize-the-data-in-chart-or-table-format",children:"8. Then, proceed to visualize the data in chart or table format."}),"\n",(0,i.jsx)(t.h2,{id:"oracle-client-mode",children:"Oracle Client mode"}),"\n",(0,i.jsx)(t.h3,{id:"thin-mode-nodejs-default",children:"Thin mode (nodejs default)"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Support Oracle Database version 12.1 or later"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"thick-mode-docker-compose-default",children:"Thick mode (docker-compose default)"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Support Oracle Database version 21, 19, 18, 12, and 11.2"}),"\n",(0,i.jsx)(t.li,{children:"If you are using Docker, it runs by default in thick mode, so you don't need to install client."}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"thick-mode-install",children:"Thick mode install"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"download client"}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.oracle.com/database/technologies/instant-client/downloads.html",children:"https://www.oracle.com/database/technologies/instant-client/downloads.html"})}),"\n",(0,i.jsx)(t.li,{children:"unzip client"}),"\n",(0,i.jsx)(t.li,{children:"uncomment ORACLE_CLIENT_DIR with your client path"}),"\n",(0,i.jsxs)(t.li,{children:["more detail in ",(0,i.jsx)(t.a,{href:"https://node-oracledb.readthedocs.io/en/latest/user_guide/installation.html#install-oracle-client-to-use-thick-mode",children:"https://node-oracledb.readthedocs.io/en/latest/user_guide/installation.html#install-oracle-client-to-use-thick-mode"})]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"mapping-with-mybatis",children:"Mapping with Mybatis"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Mybatis uses the format supported by ",(0,i.jsx)(t.a,{href:"https://github.com/OldBlackJoe/mybatis-mapper/tree/master",children:"https://github.com/OldBlackJoe/mybatis-mapper/tree/master"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"Exceptionally, you can pass bindJSON values to use PL/SQL."}),"\n",(0,i.jsx)(t.li,{children:'To use it, please create a "mybatis" folder.'}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"if\ubb38-\uc0ac\uc6a9-\uc608\uc81c",children:"if\ubb38 \uc0ac\uc6a9 \uc608\uc81c"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"mybatis \ud3f4\ub354\uc5d0 \uc544\ub798\uc640 \uac19\uc740 \ud615\uc2dd\uc73c\ub85c \uc785\ub825\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4."}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",metastring:'title="./mybatis/sample.xml"',children:'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">\n<mapper namespace="sample">  \n  <select id="test">\n    SELECT\n      *\n    FROM\n      POST\n    WHERE\n      1=1\n      <if test="id != null and id != \'\'">\n      AND id = #{id}\n      </if>\n  </select>\n</mapper>\n'})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:'The above example uses an if condition to search by the "id" condition only if the "id" value is passed as a parameter. Otherwise, it returns all data.'}),"\n",(0,i.jsx)(t.li,{children:"After adding the XML file, add the configuration to the environment variables."}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",metastring:'title=".env.production.local"',children:"QUERY_mybatis_1=mybatis;sample;test;{};/api/mybatistest\n"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"After adding the environment variables, restart the system. Once restarted, when making a request to the corresponding endpoint, it will be connected to the 'sample.test' in the mybatis folder, allowing you to create queries and retrieve data."}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example-of-using-a-stored-procedure",children:"Example of using a Stored Procedure"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"To use a Stored Procedure, add the Mybatis file."}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",metastring:'title="./mybatis/sample2.xml"',children:'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">\n<mapper namespace="sample2">  \n  <sql id="test">\n  BEGIN\n    myproc(\n      :p_id,\n      :p_name,\n      :p_view_count\n    );\n  END;  \n  </sql>\n</mapper>\n'})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The above example is a simple Stored Procedure that takes input and output."}),"\n",(0,i.jsx)(t.li,{children:'"p_id" is an input that accepts a numeric value, and "p_name" and "p_view_count" are outputs of string and numeric types, respectively.'}),"\n",(0,i.jsx)(t.li,{children:"To use the above example, add the following configuration to the environment variables."}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",metastring:'title=".env.production.local"',children:'QUERY_mybatis_2=mybatis;sample2;test;{"p_id": {"type": "number", "dir": "in"}, "p_name": {"dir": "out", "type": "string"}, "p_view_count": {"dir": "out", "type": "number"}};/api/mybatistest2\n'})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The bind information in the 4th value is bound to the input/output values of the Stored Procedure."}),"\n",(0,i.jsx)(t.li,{children:"Currently, only three types of binding are supported: string, number, and cursor."}),"\n",(0,i.jsx)(t.li,{children:'"dir" supports only two values: "in" and "out".'}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example-of-a-stored-procedure-with-a-cursor",children:"Example of a Stored Procedure with a Cursor"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",metastring:'title="./mybatis/sample3.xml"',children:'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">\n<mapper namespace="sample3">  \n  <sql id="test">\n  BEGIN myproc2(:p_id, :p_cursor); END;\n  </sql>\n</mapper>\n'})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",metastring:'title=".env.production.local"',children:'QUERY_mybatis_3=mybatis;sample3;test;{"p_id": {"type": "number", "dir": "in"}, "p_cursor": {"dir": "out", "type": "cursor"}};/api/mybatistest3\n'})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>r});var i=n(6540);const a={},s=i.createContext(a);function l(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);