"use strict";(self.webpackChunksclab_docs=self.webpackChunksclab_docs||[]).push([[7669],{7573:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=n(4848),a=n(8453);const r={title:"SQL Server Connector",tags:["Connector","DB","MSSQL","SQL Server"]},s=void 0,o={id:"tutorial/Connectors/MSSQL",title:"SQL Server Connector",description:"Introduction",source:"@site/docs/tutorial/03-Connectors/04-MSSQL.md",sourceDirName:"tutorial/03-Connectors",slug:"/tutorial/Connectors/MSSQL",permalink:"/docs/tutorial/Connectors/MSSQL",draft:!1,unlisted:!1,editUrl:"https://github.com/sclab-io/sclab-io.github.io/tree/main/docs/tutorial/03-Connectors/04-MSSQL.md",tags:[{label:"Connector",permalink:"/docs/tags/connector"},{label:"DB",permalink:"/docs/tags/db"},{label:"MSSQL",permalink:"/docs/tags/mssql"},{label:"SQL Server",permalink:"/docs/tags/sql-server"}],version:"current",sidebarPosition:4,frontMatter:{title:"SQL Server Connector",tags:["Connector","DB","MSSQL","SQL Server"]},sidebar:"tutorial",previous:{title:"ORACLE Connector",permalink:"/docs/tutorial/Connectors/ORACLE"},next:{title:"ODBC Connector",permalink:"/docs/tutorial/Connectors/ODBC"}},l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Features",id:"features",level:3},{value:"mqtt method format:",id:"mqtt-method-format",level:3},{value:"api method format:",id:"api-method-format",level:3},{value:"Installation",id:"installation",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"clone source",id:"clone-source",level:3},{value:"create JWT key file for API",id:"create-jwt-key-file-for-api",level:3},{value:"create .env.production.local",id:"create-envproductionlocal",level:3},{value:"start",id:"start",level:3},{value:"stop",id:"stop",level:3},{value:"logs",id:"logs",level:3},{value:"access API end point",id:"access-api-end-point",level:3},{value:"Build source",id:"build-source",level:2},{value:"install nodejs",id:"install-nodejs",level:3},{value:"build source",id:"build-source-1",level:3},{value:"Connect data using API",id:"connect-data-using-api",level:2},{value:"Connect to QUERY_2",id:"connect-to-query_2",level:3},{value:"1. Navigate to the data editor screen in SCLAB Studio and add an API.",id:"1-navigate-to-the-data-editor-screen-in-sclab-studio-and-add-an-api",level:3},{value:"2. Select the Headers tab and enter the authentication key value.",id:"2-select-the-headers-tab-and-enter-the-authentication-key-value",level:3},{value:"3. If it is a query with parameters set, add the setting value to the Params tab.",id:"3-if-it-is-a-query-with-parameters-set-add-the-setting-value-to-the-params-tab",level:3},{value:"4. Click the SEND button to establish a connection.",id:"4-click-the-send-button-to-establish-a-connection",level:3},{value:"5. Verify that the data is coming in properly.",id:"5-verify-that-the-data-is-coming-in-properly",level:3},{value:"6. If the data is received, map the field and label values through the Pass Configuration.",id:"6-if-the-data-is-received-map-the-field-and-label-values-through-the-pass-configuration",level:3},{value:"7. Click the SAVE button to save the data.",id:"7-click-the-save-button-to-save-the-data",level:3},{value:"8. Then, proceed to visualize the data in chart or table format.",id:"8-then-proceed-to-visualize-the-data-in-chart-or-table-format",level:3}];function c(e){const t={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(t.p,{children:"This connector provides functionality for retrieving data using SQL Server Database in SCLAB Studio."}),"\n",(0,i.jsx)(t.h3,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Connect to SQL Server DB with connection pool"}),"\n",(0,i.jsx)(t.li,{children:"MQTT message publish using SQL Query with interval"}),"\n",(0,i.jsx)(t.li,{children:"Create REST API endpoint with SQL Query"}),"\n",(0,i.jsx)(t.li,{children:"JWT for HTTP authorization"}),"\n",(0,i.jsx)(t.li,{children:"Processing of result data into JSON format"}),"\n",(0,i.jsx)(t.li,{children:"SQL Injection filter (default on)"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:'By adding a query in the format of "QUERY_1=mqtt;query;topic;interval ms" to the .env file, SQL is automatically executed to connect and retrieve data from SCLAB.'}),"\n",(0,i.jsx)(t.p,{children:"Two methods are supported: MQTT and API, each with a different variable format:"}),"\n",(0,i.jsx)(t.h3,{id:"mqtt-method-format",children:"mqtt method format:"}),"\n",(0,i.jsx)(t.p,{children:"QUERY_#=mqtt;SQL Query;topic;interval MS"}),"\n",(0,i.jsx)(t.h3,{id:"api-method-format",children:"api method format:"}),"\n",(0,i.jsx)(t.p,{children:"QUERY_#=api;SQL Query;Endpoint URL"}),"\n",(0,i.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(t.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"SQL Server Database"}),"\n",(0,i.jsx)(t.li,{children:"connection information"}),"\n",(0,i.jsx)(t.li,{children:"Install docker or nodejs"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"clone-source",children:"clone source"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ git clone https://github.com/sclab-io/sclab-sqlserver-connector\n"})}),"\n",(0,i.jsx)(t.h3,{id:"create-jwt-key-file-for-api",children:"create JWT key file for API"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ mkdir jwt\n$ ssh-keygen -t rsa -b 4096 -m PEM -f ./jwt/jwtRS256.key\n# empty passphrase - just press enter\n$ openssl rsa -in ./jwt/jwtRS256.key -pubout -outform PEM -out ./jwt/jwtRS256.key.pub\n"})}),"\n",(0,i.jsx)(t.h3,{id:"create-envproductionlocal",children:"create .env.production.local"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ vi .env.production.local\n\n# SQL Server Connection\nMSSQL_DB_USER=sa\nMSSQL_DB_PASSWORD=yourpassword\nMSSQL_DB_NAME=dbname\nMSSQL_SERVER=localhost\nMSSQL_PORT=1433\nMSSQL_POOL_MIN=1\nMSSQL_POOL_MAX=10\nMSSQL_IDLE_TIMEOUT_MS=30000\n\n# SCLAB IoT\n# MQTT_TOPIC=yourtopic/\n# MQTT_HOST=yourhost\n# MQTT_CLIENT_ID=your-client-id/1\n# MQTT_ID=your-id\n# MQTT_PASSWORD=your-password\n\n# QUERY_#=mqtt;query;topic;interval ms\n# QUERY_#=api;query;endPoint\nQUERY_0=api;SELECT TOP 1 number FROM (SELECT ABS(CHECKSUM(NEWID())) % 100 + 1 AS number FROM sys.objects) AS random_numbers;/api/1\nQUERY_1=api;SELECT * FROM employees;/api/2\n# QUERY_3=mqtt;SELECT TOP 1 number FROM (SELECT ABS(CHECKSUM(NEWID())) % 100 + 1 AS number FROM sys.objects) AS random_numbers;test0;1000\n# QUERY_4=mqtt;SELECT TOP 1 number FROM (SELECT ABS(CHECKSUM(NEWID())) % 1000 + 1 AS number FROM sys.objects) AS random_numbers;test1;5000\n\n# PORT\nPORT=3000\n\n# TOKEN\nSECRET_KEY=secretKey\nJWT_PRIVATE_KEY_PATH=./jwt/jwtRS256.key\nJWT_PUBLIC_KEY_PATH=./jwt/jwtRS256.key.pub\n\n# LOG\nLOG_FORMAT=combined\nLOG_DIR=../logs\n\n# CORS\nORIGIN=your.domain.com\nCREDENTIALS=true\n\n# SQL INJECTION\nSQL_INJECTION=1\n"})}),"\n",(0,i.jsx)(t.h3,{id:"start",children:"start"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"# docker compose\n$ ./run.sh\n\n# nodejs\n$ npm run start\n\n# pm2\n$ npm run deploy:prod\n"})}),"\n",(0,i.jsx)(t.h3,{id:"stop",children:"stop"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"# docker compose\n$ ./stop.sh\n\n# pm2\n$ ./node_modules/pm2/bin/pm2 stop 0\n"})}),"\n",(0,i.jsx)(t.h3,{id:"logs",children:"logs"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ ./logs.sh\n"})}),"\n",(0,i.jsx)(t.h3,{id:"access-api-end-point",children:"access API end point"}),"\n",(0,i.jsx)(t.p,{children:"To access the API, you need to include authorization information in the Request Header in the following format:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"authorization: yourkey\n"})}),"\n",(0,i.jsx)(t.p,{children:"You can find your key information through the logs."}),"\n",(0,i.jsx)(t.h2,{id:"build-source",children:"Build source"}),"\n",(0,i.jsx)(t.h3,{id:"install-nodejs",children:"install nodejs"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"curl -sL https://rpm.nodesource.com/setup_18.x | sudo bash -\nsudo yum install nodejs\n"})}),"\n",(0,i.jsx)(t.h3,{id:"build-source-1",children:"build source"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ npm install\n$ npm run build\n"})}),"\n",(0,i.jsx)(t.h2,{id:"connect-data-using-api",children:"Connect data using API"}),"\n",(0,i.jsx)(t.h3,{id:"connect-to-query_2",children:"Connect to QUERY_2"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'QUERY_2=api;SELECT ${field} from ${table} where name="${name}";/api/2\n'})}),"\n",(0,i.jsx)(t.h3,{id:"1-navigate-to-the-data-editor-screen-in-sclab-studio-and-add-an-api",children:"1. Navigate to the data editor screen in SCLAB Studio and add an API."}),"\n",(0,i.jsx)(t.p,{children:"Enter the API endpoint address you want to connect to. If you are using Docker, the default port is set to 9180."}),"\n",(0,i.jsx)(t.p,{children:"Please enter the address in the following format."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"http://ip:9080/api/2\n"})}),"\n",(0,i.jsx)(t.h3,{id:"2-select-the-headers-tab-and-enter-the-authentication-key-value",children:"2. Select the Headers tab and enter the authentication key value."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Key"}),(0,i.jsx)(t.th,{children:"Value Type"}),(0,i.jsx)(t.th,{children:"Value"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"authorization"}),(0,i.jsx)(t.td,{children:"Fixed"}),(0,i.jsx)(t.td,{children:"yourkeyfromlog"})]})})]}),"\n",(0,i.jsx)(t.h3,{id:"3-if-it-is-a-query-with-parameters-set-add-the-setting-value-to-the-params-tab",children:"3. If it is a query with parameters set, add the setting value to the Params tab."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Key"}),(0,i.jsx)(t.th,{children:"Value Type"}),(0,i.jsx)(t.th,{children:"Value"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"field"}),(0,i.jsx)(t.td,{children:"Variable"}),(0,i.jsx)(t.td,{children:"*"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"table"}),(0,i.jsx)(t.td,{children:"Variable"}),(0,i.jsx)(t.td,{children:"product"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"name"}),(0,i.jsx)(t.td,{children:"Variable"}),(0,i.jsx)(t.td,{children:"Bike"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"4-click-the-send-button-to-establish-a-connection",children:"4. Click the SEND button to establish a connection."}),"\n",(0,i.jsx)(t.h3,{id:"5-verify-that-the-data-is-coming-in-properly",children:"5. Verify that the data is coming in properly."}),"\n",(0,i.jsx)(t.h3,{id:"6-if-the-data-is-received-map-the-field-and-label-values-through-the-pass-configuration",children:"6. If the data is received, map the field and label values through the Pass Configuration."}),"\n",(0,i.jsx)(t.h3,{id:"7-click-the-save-button-to-save-the-data",children:"7. Click the SAVE button to save the data."}),"\n",(0,i.jsx)(t.h3,{id:"8-then-proceed-to-visualize-the-data-in-chart-or-table-format",children:"8. Then, proceed to visualize the data in chart or table format."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var i=n(6540);const a={},r=i.createContext(a);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);