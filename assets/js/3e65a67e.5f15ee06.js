"use strict";(self.webpackChunksclab_docs=self.webpackChunksclab_docs||[]).push([[8923],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(a),m=r,h=p["".concat(s,".").concat(m)]||p[m]||c[m]||l;return a?n.createElement(h,o(o({ref:t},d),{},{components:a})):n.createElement(h,o({ref:t},d))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9811:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const l={title:"Presto/Trino Connector",tags:["Connector","DB","Presto","Trino"]},o=void 0,i={unversionedId:"tutorial/Connectors/Presto",id:"tutorial/Connectors/Presto",title:"Presto/Trino Connector",description:"Introduction",source:"@site/docs/tutorial/02-Connectors/01-Presto.md",sourceDirName:"tutorial/02-Connectors",slug:"/tutorial/Connectors/Presto",permalink:"/docs/tutorial/Connectors/Presto",draft:!1,editUrl:"https://github.com/sclab-io/sclab-io.github.io/tree/main/docs/tutorial/02-Connectors/01-Presto.md",tags:[{label:"Connector",permalink:"/docs/tags/connector"},{label:"DB",permalink:"/docs/tags/db"},{label:"Presto",permalink:"/docs/tags/presto"},{label:"Trino",permalink:"/docs/tags/trino"}],version:"current",sidebarPosition:1,frontMatter:{title:"Presto/Trino Connector",tags:["Connector","DB","Presto","Trino"]},sidebar:"tutorial",previous:{title:"Connectors",permalink:"/docs/category/connectors"},next:{title:"MySQL Connector",permalink:"/docs/tutorial/Connectors/MySQL"}},s={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Features",id:"features",level:2},{value:"mqtt method format:",id:"mqtt-method-format",level:3},{value:"api method format:",id:"api-method-format",level:3},{value:"Installation",id:"installation",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"clone source",id:"clone-source",level:3},{value:"create JWT key file for API",id:"create-jwt-key-file-for-api",level:3},{value:"create .env.production.local",id:"create-envproductionlocal",level:3},{value:"start",id:"start",level:3},{value:"stop",id:"stop",level:3},{value:"logs",id:"logs",level:3},{value:"access API end point",id:"access-api-end-point",level:3},{value:"Build source",id:"build-source",level:2},{value:"install nodejs",id:"install-nodejs",level:3},{value:"build source",id:"build-source-1",level:3},{value:"Connect data using API",id:"connect-data-using-api",level:2},{value:"Connect to QUERY_2",id:"connect-to-query_2",level:3},{value:"1. Navigate to the data editor screen in SCLAB Studio and add an API.",id:"1-navigate-to-the-data-editor-screen-in-sclab-studio-and-add-an-api",level:3},{value:"2. Select the Headers tab and enter the authentication key value.",id:"2-select-the-headers-tab-and-enter-the-authentication-key-value",level:3},{value:"3. If it is a query with parameters set, add the setting value to the Params tab.",id:"3-if-it-is-a-query-with-parameters-set-add-the-setting-value-to-the-params-tab",level:3},{value:"4. Click the SEND button to establish a connection.",id:"4-click-the-send-button-to-establish-a-connection",level:3},{value:"5. Verify that the data is coming in properly.",id:"5-verify-that-the-data-is-coming-in-properly",level:3},{value:"6. If the data is received, map the field and label values through the Pass Configuration.",id:"6-if-the-data-is-received-map-the-field-and-label-values-through-the-pass-configuration",level:3},{value:"7. Click the SAVE button to save the data.",id:"7-click-the-save-button-to-save-the-data",level:3},{value:"8. Then, proceed to visualize the data in chart or table format.",id:"8-then-proceed-to-visualize-the-data-in-chart-or-table-format",level:3},{value:"Mapping with Mybatis",id:"mapping-with-mybatis",level:2},{value:"Example of using if statement",id:"example-of-using-if-statement",level:3},{value:"Example of using a date range query",id:"example-of-using-a-date-range-query",level:3}],d={toc:u},p="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"This connector provides functionality for retrieving data using Presto/Trino in SCLAB Studio."),(0,r.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/LLNV-QlyW58",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Connect to Presto/Trino"),(0,r.kt)("li",{parentName:"ul"},"MQTT message publish using SQL Query with interval"),(0,r.kt)("li",{parentName:"ul"},"Create REST API endpoint with SQL Query"),(0,r.kt)("li",{parentName:"ul"},"JWT for HTTP authorization"),(0,r.kt)("li",{parentName:"ul"},"Processing of result data into JSON format"),(0,r.kt)("li",{parentName:"ul"},"SQL Injection filter (default on)"),(0,r.kt)("li",{parentName:"ul"},"Mapping with Mybatis")),(0,r.kt)("p",null,'By adding a query in the format of "QUERY_1=mqtt;query;topic;interval ms" to the .env file, SQL is automatically executed to connect and retrieve data from SCLAB.'),(0,r.kt)("p",null,"Two methods are supported: MQTT and API, each with a different variable format:"),(0,r.kt)("h3",{id:"mqtt-method-format"},"mqtt method format:"),(0,r.kt)("p",null,"QUERY_#=mqtt;SQL Query;topic;interval MS"),(0,r.kt)("h3",{id:"api-method-format"},"api method format:"),(0,r.kt)("p",null,"QUERY_#=api;SQL Query;Endpoint URL"),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"trino or presto (",(0,r.kt)("a",{parentName:"li",href:"https://trino.io/docs/current/installation.html"},"https://trino.io/docs/current/installation.html"),")"),(0,r.kt)("li",{parentName:"ul"},"connection information"),(0,r.kt)("li",{parentName:"ul"},"Install docker or nodejs")),(0,r.kt)("h3",{id:"clone-source"},"clone source"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/sclab-io/sclab-presto-connector\n")),(0,r.kt)("h3",{id:"create-jwt-key-file-for-api"},"create JWT key file for API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ mkdir jwt\n$ ssh-keygen -t rsa -b 4096 -m PEM -f ./jwt/jwtRS256.key\n# empty passphrase - just press enter\n$ openssl rsa -in ./jwt/jwtRS256.key -pubout -outform PEM -out ./jwt/jwtRS256.key.pub\n")),(0,r.kt)("h3",{id:"create-envproductionlocal"},"create .env.production.local"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ vi .env.production.local\n\n# Presto/Trino Connection\nPRESTO_HOST=172.17.0.1\nPRESTO_PORT=8080\nPRESTO_USER=sclab-trino-client\n\n# BASIC AUTH\nPRESTO_AUTH=BASIC\nPRESTO_BASIC_USER=user\n#PRESTO_BASIC_PASSWORD=password\n\n# CUSTOM AUTH\n#PRESTO_AUTH=CUSTOM\n#PRESTO_CUSTOM_AUTH=Sets HTTP Authorization header with the provided string.\n\n# SCLAB IoT (Remove this environment if you do not need to use MQTT)\nMQTT_TOPIC=yourtopic/\nMQTT_HOST=yourhost\nMQTT_CLIENT_ID=your-client-id/1\nMQTT_ID=your-id\nMQTT_PASSWORD=your-password\n\n# QUERY_#=mqtt;query;topic;interval ms\n# QUERY_#=api;query;endPoint\nQUERY_1=api;SELECT ROUND( RAND() * 100 ) AS value, NOW() AS datetime;/api/1\nQUERY_2=api;SELECT ${field} from ${table} where name="${name}";/api/2\n# QUERY_3=mqtt;SELECT ROUND( RAND() * 100 ) AS value, NOW() AS datetime;test0;1000\n# QUERY_4=mqtt;SELECT ROUND( RAND() * 1000 ) AS value, NOW() AS datetime;test1;5000\n\n# PORT\nPORT=3000\n\n# MyBatis\nMY_BATIS_FILE_FOLDER=./mybatis\n\n# TOKEN\nSECRET_KEY=secretKey\nJWT_PRIVATE_KEY_PATH=./jwt/jwtRS256.key\nJWT_PUBLIC_KEY_PATH=./jwt/jwtRS256.key.pub\n\n# LOG\nLOG_FORMAT=combined\nLOG_DIR=../logs\n\n# CORS\nORIGIN=your.domain.com\nCREDENTIALS=true\n\n# SQL INJECTION\nSQL_INJECTION=1\n')),(0,r.kt)("h3",{id:"start"},"start"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# docker compose\n$ ./run.sh\n\n# nodejs\n$ npm run start\n\n# pm2\n$ npm run deploy:prod\n")),(0,r.kt)("h3",{id:"stop"},"stop"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# docker compose\n$ ./stop.sh\n\n# pm2\n$ ./node_modules/.bin/pm2 stop 0\n")),(0,r.kt)("h3",{id:"logs"},"logs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ ./logs.sh\n")),(0,r.kt)("h3",{id:"access-api-end-point"},"access API end point"),(0,r.kt)("p",null,"To access the API, you need to include authorization information in the Request Header in the following format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"authorization: yourkey\n")),(0,r.kt)("p",null,"You can find your key information through the logs."),(0,r.kt)("h2",{id:"build-source"},"Build source"),(0,r.kt)("h3",{id:"install-nodejs"},"install nodejs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sL https://rpm.nodesource.com/setup_18.x | sudo bash -\nsudo yum install nodejs\n")),(0,r.kt)("h3",{id:"build-source-1"},"build source"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install\n$ npm run build\n")),(0,r.kt)("h2",{id:"connect-data-using-api"},"Connect data using API"),(0,r.kt)("h3",{id:"connect-to-query_2"},"Connect to QUERY_2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'QUERY_2=api;SELECT ${field} from ${table} where name="${name}";/api/2\n')),(0,r.kt)("h3",{id:"1-navigate-to-the-data-editor-screen-in-sclab-studio-and-add-an-api"},"1. Navigate to the data editor screen in SCLAB Studio and add an API."),(0,r.kt)("p",null,"Enter the API endpoint address you want to connect to. If you are using Docker, the default port is set to 9180."),(0,r.kt)("p",null,"Please enter the address in the following format."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"http://ip:9180/api/2\n")),(0,r.kt)("h3",{id:"2-select-the-headers-tab-and-enter-the-authentication-key-value"},"2. Select the Headers tab and enter the authentication key value."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Value Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"authorization"),(0,r.kt)("td",{parentName:"tr",align:null},"Fixed"),(0,r.kt)("td",{parentName:"tr",align:null},"yourkeyfromlog")))),(0,r.kt)("h3",{id:"3-if-it-is-a-query-with-parameters-set-add-the-setting-value-to-the-params-tab"},"3. If it is a query with parameters set, add the setting value to the Params tab."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Value Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"field"),(0,r.kt)("td",{parentName:"tr",align:null},"Variable"),(0,r.kt)("td",{parentName:"tr",align:null},"*")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"table"),(0,r.kt)("td",{parentName:"tr",align:null},"Variable"),(0,r.kt)("td",{parentName:"tr",align:null},"product")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"Variable"),(0,r.kt)("td",{parentName:"tr",align:null},"Bike")))),(0,r.kt)("h3",{id:"4-click-the-send-button-to-establish-a-connection"},"4. Click the SEND button to establish a connection."),(0,r.kt)("h3",{id:"5-verify-that-the-data-is-coming-in-properly"},"5. Verify that the data is coming in properly."),(0,r.kt)("h3",{id:"6-if-the-data-is-received-map-the-field-and-label-values-through-the-pass-configuration"},"6. If the data is received, map the field and label values through the Pass Configuration."),(0,r.kt)("h3",{id:"7-click-the-save-button-to-save-the-data"},"7. Click the SAVE button to save the data."),(0,r.kt)("h3",{id:"8-then-proceed-to-visualize-the-data-in-chart-or-table-format"},"8. Then, proceed to visualize the data in chart or table format."),(0,r.kt)("h2",{id:"mapping-with-mybatis"},"Mapping with Mybatis"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Mybatis utilizes ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OldBlackJoe/mybatis-mapper/tree/master"},"https://github.com/OldBlackJoe/mybatis-mapper/tree/master"),", and only the supported formats from there are applicable."),(0,r.kt)("li",{parentName:"ul"},"To use it, please create a mybatis folder.")),(0,r.kt)("h3",{id:"example-of-using-if-statement"},"Example of using if statement"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You can input the following format in the mybatis folder.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="./mybatis/sample.xml"',title:'"./mybatis/sample.xml"'},'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">\n<mapper namespace="sample">  \n  <select id="test">\n    SELECT\n      *\n    FROM\n      POST\n    WHERE\n      1=1\n      <if test="id != null and id != \'\'">\n      AND id = #{id}\n      </if>\n  </select>\n</mapper>\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The above example uses an if statement to search by the id condition only if the id value is passed as a parameter. Otherwise, it returns all the data."),(0,r.kt)("li",{parentName:"ul"},"After adding the XML file, add the configuration to the environment variable as follows:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=".env.production.local"',title:'".env.production.local"'},"QUERY_mybatis_1=mybatis;sample;test;/api/mybatistest\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"After adding the environment variable, restart the system. Once restarted, when making a request to the corresponding endpoint, it will be connected to sample.test in the mybatis folder, allowing you to create queries and retrieve data.")),(0,r.kt)("h3",{id:"example-of-using-a-date-range-query"},"Example of using a date range query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="./mybatis/sample2.xml"',title:'"./mybatis/sample2.xml"'},"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"sample2\">  \n  <select id=\"test\">\n    SELECT \n      DATE_FORMAT(date_parse(date, '%Y%m%d'), '%Y') AS year, \n      DATE_FORMAT(date_parse(date, '%Y%m%d'), '%m') AS month, \n      SUM(newusercount) AS total_new_user_count \n    FROM mycatalog.mydb.statistics \n    WHERE \n      date_parse(date, '%Y%m%d') BETWEEN \n      date_parse(${startDate}, '%Y%m%d') AND \n      date_parse(${endDate}, '%Y%m%d') \n    GROUP BY \n      DATE_FORMAT(date_parse(date, '%Y%m%d'), '%Y'), \n      DATE_FORMAT(date_parse(date, '%Y%m%d'), '%m') \n    ORDER BY year, month\n  </select>\n</mapper>\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The above query retrieves the number of new members who joined during a specific period from a statistics table."),(0,r.kt)("li",{parentName:"ul"},"The data in the table is stored with the format 'YYYYMMDD' for the date."),(0,r.kt)("li",{parentName:"ul"},"To extract data on a monthly basis, the query calculates the new member count for each month."),(0,r.kt)("li",{parentName:"ul"},"Since only daily data is stored, it uses SUM to calculate the total, and GROUP BY retrieves the data in the format of year and month.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=".env.production.local"',title:'".env.production.local"'},"QUERY_mybatis_2=mybatis;sample2;test;/api/mybatistest2\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"After adding the environment variable, restart the system.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl \"http://localhost:9180/api/mybatistest2?startDate=20200101&endDate=20231223\" -H 'authorization: TOKEN'\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"By making a request like the above, you can retrieve the number of new members who joined on a monthly basis from January 2023 to June 2023.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "rows":[\n    {"year":"2023","month":"01","total_new_user_count":3567},\n    {"year":"2023","month":"02","total_new_user_count":3416},\n    {"year":"2023","month":"03","total_new_user_count":4345},\n    {"year":"2023","month":"04","total_new_user_count":4025},\n    {"year":"2023","month":"05","total_new_user_count":4488},\n    {"year":"2023","month":"06","total_new_user_count":4453}\n  ]\n}\u23ce\n')))}c.isMDXComponent=!0}}]);