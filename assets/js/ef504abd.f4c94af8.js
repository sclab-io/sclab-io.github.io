"use strict";(self.webpackChunksclab_docs=self.webpackChunksclab_docs||[]).push([[9238],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,o=e.originalType,d=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(a),m=l,h=c["".concat(d,".").concat(m)]||c[m]||p[m]||o;return a?n.createElement(h,r(r({ref:t},u),{},{components:a})):n.createElement(h,r({ref:t},u))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=a.length,r=new Array(o);r[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[c]="string"==typeof e?e:l,r[1]=i;for(var s=2;s<o;s++)r[s]=a[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4410:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=a(7462),l=(a(7294),a(3905));const o={title:"ORACLE Connector",tags:["Connector","DB","ORACLE"]},r=void 0,i={unversionedId:"tutorial/Connectors/ORACLE",id:"tutorial/Connectors/ORACLE",title:"ORACLE Connector",description:"Introduction",source:"@site/docs/tutorial/02-Connectors/03-ORACLE.md",sourceDirName:"tutorial/02-Connectors",slug:"/tutorial/Connectors/ORACLE",permalink:"/docs/tutorial/Connectors/ORACLE",draft:!1,editUrl:"https://github.com/sclab-io/sclab-io.github.io/tree/main/docs/tutorial/02-Connectors/03-ORACLE.md",tags:[{label:"Connector",permalink:"/docs/tags/connector"},{label:"DB",permalink:"/docs/tags/db"},{label:"ORACLE",permalink:"/docs/tags/oracle"}],version:"current",sidebarPosition:3,frontMatter:{title:"ORACLE Connector",tags:["Connector","DB","ORACLE"]},sidebar:"tutorial",previous:{title:"MySQL Connector",permalink:"/docs/tutorial/Connectors/MySQL"}},d={},s=[{value:"Introduction",id:"introduction",level:2},{value:"Features",id:"features",level:3},{value:"mqtt method format:",id:"mqtt-method-format",level:3},{value:"api method format:",id:"api-method-format",level:3},{value:"Installation",id:"installation",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"clone source",id:"clone-source",level:3},{value:"create JWT key file for API",id:"create-jwt-key-file-for-api",level:3},{value:"create .env.production.local",id:"create-envproductionlocal",level:3},{value:"start",id:"start",level:3},{value:"stop",id:"stop",level:3},{value:"logs",id:"logs",level:3},{value:"access API end point",id:"access-api-end-point",level:3},{value:"Build source",id:"build-source",level:2},{value:"install nodejs",id:"install-nodejs",level:3},{value:"build source",id:"build-source-1",level:3},{value:"Connect data using API",id:"connect-data-using-api",level:2},{value:"Connect to QUERY_2",id:"connect-to-query_2",level:3},{value:"1. Navigate to the data editor screen in SCLAB Studio and add an API.",id:"1-navigate-to-the-data-editor-screen-in-sclab-studio-and-add-an-api",level:3},{value:"2. Select the Headers tab and enter the authentication key value.",id:"2-select-the-headers-tab-and-enter-the-authentication-key-value",level:3},{value:"3. If it is a query with parameters set, add the setting value to the Params tab.",id:"3-if-it-is-a-query-with-parameters-set-add-the-setting-value-to-the-params-tab",level:3},{value:"4. Click the SEND button to establish a connection.",id:"4-click-the-send-button-to-establish-a-connection",level:3},{value:"5. Verify that the data is coming in properly.",id:"5-verify-that-the-data-is-coming-in-properly",level:3},{value:"6. If the data is received, map the field and label values through the Pass Configuration.",id:"6-if-the-data-is-received-map-the-field-and-label-values-through-the-pass-configuration",level:3},{value:"7. Click the SAVE button to save the data.",id:"7-click-the-save-button-to-save-the-data",level:3},{value:"8. Then, proceed to visualize the data in chart or table format.",id:"8-then-proceed-to-visualize-the-data-in-chart-or-table-format",level:3},{value:"Oracle Client mode",id:"oracle-client-mode",level:2},{value:"Thin mode (nodejs default)",id:"thin-mode-nodejs-default",level:3},{value:"Thick mode (docker-compose default)",id:"thick-mode-docker-compose-default",level:3},{value:"Thick mode install",id:"thick-mode-install",level:4}],u={toc:s},c="wrapper";function p(e){let{components:t,...a}=e;return(0,l.kt)(c,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"This connector provides functionality for retrieving data using ORACLE Database in SCLAB Studio."),(0,l.kt)("h3",{id:"features"},"Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Connect to ORACLE DB with connection pool"),(0,l.kt)("li",{parentName:"ul"},"MQTT message publish using SQL Query with interval"),(0,l.kt)("li",{parentName:"ul"},"Create REST API endpoint with SQL Query"),(0,l.kt)("li",{parentName:"ul"},"JWT for HTTP authorization"),(0,l.kt)("li",{parentName:"ul"},"Processing of result data into JSON format"),(0,l.kt)("li",{parentName:"ul"},"SQL Injection filter (default on)")),(0,l.kt)("p",null,'By adding a query in the format of "QUERY_1=mqtt;query;topic;interval ms" to the .env file, SQL is automatically executed to connect and retrieve data from SCLAB.'),(0,l.kt)("p",null,"Two methods are supported: MQTT and API, each with a different variable format:"),(0,l.kt)("h3",{id:"mqtt-method-format"},"mqtt method format:"),(0,l.kt)("p",null,"QUERY_#=mqtt;SQL Query;topic;interval MS"),(0,l.kt)("h3",{id:"api-method-format"},"api method format:"),(0,l.kt)("p",null,"QUERY_#=api;SQL Query;Endpoint URL"),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ORACLE Database"),(0,l.kt)("li",{parentName:"ul"},"connection information"),(0,l.kt)("li",{parentName:"ul"},"Install docker or nodejs")),(0,l.kt)("h3",{id:"clone-source"},"clone source"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/sclab-io/sclab-oracle-connector\n")),(0,l.kt)("h3",{id:"create-jwt-key-file-for-api"},"create JWT key file for API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ mkdir jwt\n$ ssh-keygen -t rsa -b 4096 -m PEM -f ./jwt/jwtRS256.key\n# empty passphrase - just press enter\n$ openssl rsa -in ./jwt/jwtRS256.key -pubout -outform PEM -out ./jwt/jwtRS256.key.pub\n")),(0,l.kt)("h3",{id:"create-envproductionlocal"},"create .env.production.local"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'$ vi .env.production.local\n\n# ORACLE Connection\nORACLE_USER="C##USER"\nORACLE_PASSWORD=pasword\n# https://node-oracledb.readthedocs.io/en/latest/user_guide/connection_handling.html#connection-strings\nORACLE_CONNECTION_STRING=host:1521/SID\nORACLE_POOL_MAX_SIZE=10\nORACLE_POOL_MIN_SIZE=4\nORACLE_POOL_INCREMENT_SIZE=1\nORACLE_MAX_ROW_SIZE=1000\n\n# ORACLE_CLIENT_DIR=./client/instantclient_21_10\n\n# SCLAB IoT\n# MQTT_TOPIC=yourtopic/\n# MQTT_HOST=yourhost\n# MQTT_CLIENT_ID=your-client-id/1\n# MQTT_ID=your-id\n# MQTT_PASSWORD=your-password\n\n# QUERY_#=mqtt;query;topic;interval ms\n# QUERY_#=api;query;endPoint\nQUERY_1=api;SELECT DBMS_RANDOM.VALUE(1, 100) AS random_number, SYSDATE AS current_time FROM dual;/api/1\nQUERY_2=api;SELECT ${field} FROM ${table} where name="${name}";/api/2\n# QUERY_3=mqtt;SELECT DBMS_RANDOM.VALUE(1, 100) AS random_number, SYSDATE AS current_time FROM dual;test0;1000\n# QUERY_4=mqtt;SELECT DBMS_RANDOM.VALUE(1, 1000) AS random_number, SYSDATE AS current_time FROM dual;test1;5000\n\n# PORT\nPORT=3000\n\n# TOKEN\nSECRET_KEY=secretKey\nJWT_PRIVATE_KEY_PATH=./jwt/jwtRS256.key\nJWT_PUBLIC_KEY_PATH=./jwt/jwtRS256.key.pub\n\n# LOG\nLOG_FORMAT=combined\nLOG_DIR=../logs\n\n# CORS\nORIGIN=your.domain.com\nCREDENTIALS=true\n\n# SQL INJECTION\nSQL_INJECTION=1\n')),(0,l.kt)("h3",{id:"start"},"start"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# docker compose\n$ ./run.sh\n\n# nodejs\n$ npm run start\n\n# pm2\n$ npm run deploy:prod\n")),(0,l.kt)("h3",{id:"stop"},"stop"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# docker compose\n$ ./stop.sh\n\n# pm2\n$ ./node_modules/pm2/bin/pm2 stop 0\n")),(0,l.kt)("h3",{id:"logs"},"logs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ ./logs.sh\n")),(0,l.kt)("h3",{id:"access-api-end-point"},"access API end point"),(0,l.kt)("p",null,"To access the API, you need to include authorization information in the Request Header in the following format:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"authorization: yourkey\n")),(0,l.kt)("p",null,"You can find your key information through the logs."),(0,l.kt)("h2",{id:"build-source"},"Build source"),(0,l.kt)("h3",{id:"install-nodejs"},"install nodejs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sL https://rpm.nodesource.com/setup_14.x | sudo bash -\nsudo yum install nodejs\n")),(0,l.kt)("h3",{id:"build-source-1"},"build source"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install\n$ npm run build\n")),(0,l.kt)("h2",{id:"connect-data-using-api"},"Connect data using API"),(0,l.kt)("h3",{id:"connect-to-query_2"},"Connect to QUERY_2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'QUERY_2=api;SELECT ${field} from ${table} where name="${name}";/api/2\n')),(0,l.kt)("h3",{id:"1-navigate-to-the-data-editor-screen-in-sclab-studio-and-add-an-api"},"1. Navigate to the data editor screen in SCLAB Studio and add an API."),(0,l.kt)("p",null,"Enter the API endpoint address you want to connect to. If you are using Docker, the default port is set to 9180."),(0,l.kt)("p",null,"Please enter the address in the following format."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"http://ip:9180/api/2\n")),(0,l.kt)("h3",{id:"2-select-the-headers-tab-and-enter-the-authentication-key-value"},"2. Select the Headers tab and enter the authentication key value."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Value Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"authorization"),(0,l.kt)("td",{parentName:"tr",align:null},"Fixed"),(0,l.kt)("td",{parentName:"tr",align:null},"yourkeyfromlog")))),(0,l.kt)("h3",{id:"3-if-it-is-a-query-with-parameters-set-add-the-setting-value-to-the-params-tab"},"3. If it is a query with parameters set, add the setting value to the Params tab."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Value Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"field"),(0,l.kt)("td",{parentName:"tr",align:null},"Variable"),(0,l.kt)("td",{parentName:"tr",align:null},"*")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null},"Variable"),(0,l.kt)("td",{parentName:"tr",align:null},"product")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"Variable"),(0,l.kt)("td",{parentName:"tr",align:null},"Bike")))),(0,l.kt)("h3",{id:"4-click-the-send-button-to-establish-a-connection"},"4. Click the SEND button to establish a connection."),(0,l.kt)("h3",{id:"5-verify-that-the-data-is-coming-in-properly"},"5. Verify that the data is coming in properly."),(0,l.kt)("h3",{id:"6-if-the-data-is-received-map-the-field-and-label-values-through-the-pass-configuration"},"6. If the data is received, map the field and label values through the Pass Configuration."),(0,l.kt)("h3",{id:"7-click-the-save-button-to-save-the-data"},"7. Click the SAVE button to save the data."),(0,l.kt)("h3",{id:"8-then-proceed-to-visualize-the-data-in-chart-or-table-format"},"8. Then, proceed to visualize the data in chart or table format."),(0,l.kt)("h2",{id:"oracle-client-mode"},"Oracle Client mode"),(0,l.kt)("h3",{id:"thin-mode-nodejs-default"},"Thin mode (nodejs default)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Support Oracle Database version 12.1 or later")),(0,l.kt)("h3",{id:"thick-mode-docker-compose-default"},"Thick mode (docker-compose default)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Support Oracle Database version 21, 19, 18, 12, and 11.2"),(0,l.kt)("li",{parentName:"ul"},"If you are using Docker, it runs by default in thick mode, so you don't need to install client.")),(0,l.kt)("h4",{id:"thick-mode-install"},"Thick mode install"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"download client"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.oracle.com/database/technologies/instant-client/downloads.html"},"https://www.oracle.com/database/technologies/instant-client/downloads.html")),(0,l.kt)("li",{parentName:"ul"},"unzip client"),(0,l.kt)("li",{parentName:"ul"},"uncomment ORACLE_CLIENT_DIR with your client path"),(0,l.kt)("li",{parentName:"ul"},"more detail in ",(0,l.kt)("a",{parentName:"li",href:"https://node-oracledb.readthedocs.io/en/latest/user_guide/installation.html#install-oracle-client-to-use-thick-mode"},"https://node-oracledb.readthedocs.io/en/latest/user_guide/installation.html#install-oracle-client-to-use-thick-mode"))))}p.isMDXComponent=!0}}]);